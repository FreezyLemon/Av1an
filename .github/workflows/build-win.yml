name: Build Windows executable
on: workflow_dispatch
#  release:
#    types: [published]

env:
  CARGO_TERM_COLOR: always
  ff_uri: 'https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z'
  ff_path: 'C:\ffmpeg'
  vcbt_uri: 'https://aka.ms/vs/16/release/vs_buildtools.exe'
  vcbt_installer: 'C:\buildtools_installer.exe'
  vcbt_path: 'C:\BuildTools'
  vsynth_uri: 'https://github.com/vapoursynth/vapoursynth/releases/download/R58/VapourSynth64-Portable-R58.7z'
  vsynth_path: 'C:\vapoursynth'

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Check cache for FFmpeg
      id: cache-ff
      uses: actions/cache@v3
      with:
        path: ${{ env.ff_path }}
        key: ff-${{ hashFiles('**') }}
    
    - name: Download & install FFmpeg
      run: |
        Install-Module -Name 7Zip4Powershell -Force
        $tempFile = New-TemporaryFile
        Invoke-WebRequest -Uri $env:ff_uri -OutFile $tempFile -TimeoutSec 10
        Expand-7Zip -ArchiveFileName $tempFile -TargetPath $env:ff_path
        $extractDir = Get-Item 'ffmpeg*shared' | Select-Object -First 1
        Get-Type $extractDir
        Get-Member $extractDir
        Move-Item "$extractDir.FullName/**" -Destination $env:ff_path
        Remove-Item $extractDir
        ls 'C:\ffmpeg'
        echo $env:ff_path | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "FFMPEG_DIR=$env:ff_path" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Setup Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '~3.10'
        architecture: x64

    - name: Setup NASM
      uses: ilammy/setup-nasm@v1
      with:
        version: 2.15.05
        from-source: false

    - name: Check cache for VapourSynth
      id: cache-vsynth
      uses: actions/cache@v3
      with:
        path: ${{ env.vsynth_path }}
        key: vsynth-${{ hashFiles('**') }}

    - if: ${{ steps.cache-vsynth.outputs.cache-hit == 'false' }}
      name: Download & install VapourSynth
      run: |
        $tempFile = New-TemporaryFile
        Invoke-WebRequest -Uri $env:vsynth_uri -OutFile $tempFile -TimeoutSec 10
        Expand-7Zip -ArchiveFileName $tempFile -TargetPath $env:vsynth_path
        echo $env:vsynth_path | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Download & install Visual C++ Build Tools
      run: |
        Invoke-WebRequest -Uri $env:vcbt_uri -OutFile $env:vcbt_installer -TimeoutSec 10
        '& $env:vcbt_installer --quiet --wait --norestart --nocache --installPath $env:vcbt_path --add Microsoft.VisualStudio.Workload.VCTools --add Microsoft.VisualStudio.Component.VC.ASAN --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64'

    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v1
    - name: Build Av1an
      run: cargo build -rv
    - run: ls target
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Build result
        path: target/release/
